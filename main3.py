import sqlite3
import telebot
from telebot import types
import random

token = '7547484997:AAEEku9A0hWZkhjA3jH4BZd2COyMuVe1BTg'

bot = telebot.TeleBot(token)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def connect_db():
    return sqlite3.connect('users.db')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users
def create_users_table():
    with connect_db() as conn:
        cursor = conn.cursor()
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        create_table_query = '''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            user_group_id INTEGER,
            user_name TEXT
        );
        '''
        cursor.execute(create_table_query)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_access(user_id):
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT user_group_id, user_name FROM users WHERE user_id=?', (user_id,))
        result = cursor.fetchone()
        return result

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 
def add_user(user_id, user_name):
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('INSERT INTO users (user_id, user_name, user_group_id) VALUES (?, ?, ?)',
                       (user_id, user_name, '0'))  # –ù–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–æ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å –≥—Ä—É–ø–ø—ã '0'
        conn.commit()

@bot.message_handler(commands=['start'])
def handle_start_command(message):
    user_id = message.chat.id
    access = get_access(user_id)

    if access:
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {}.'.format(access[1])) 
    else:
        msg = bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:')
        bot.register_next_step_handler(msg, process_name)

    btn1222 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ—Ö–∞")
    btn2 = types.KeyboardButton("–°–æ–∑–¥–∞–≤–∞–ª –ê–Ω–¥—Ä–µ–π")
    markup.add(btn1, btn2, btn1222)
    
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
   
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)
@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn11 = types.KeyboardButton('–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ—Ö–∞')
        btn12 = types.KeyboardButton('–°–æ–∑–¥–∞–≤–∞–ª –ê–Ω–¥—Ä–µ–π')
        bot.send_message(message.from_user.id, '–º–æ–π github ' + '[—Å—Å—ã–ª–∫–∞](https://github.com/asdeshnick)', parse_mode='Markdown')
        markup.add(btn11, btn12)
        bot.send_message(message.from_user.id, '‚ùì –í—ã–±–µ—Ä–∏—Ç–µ ', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞

    elif message.text == '–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–æ—Ö–∞':  
        loh = ["–õ–æ—Ö", "–ù–µ –ª–æx"]
        loh_bot = random.choice(loh)
        bot.send_message(message.from_user.id, loh_bot, reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞

def process_name(message):
    user_id = message.chat.id
    user_name = message.text.strip()
    print(user_name, user_id)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    add_user(user_id, user_name)

    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, {}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.'.format(user_name))

@bot.message_handler(commands=['admin'])
def handle_admin_command(message):
    access = get_access(message.chat.id)

    if access:
        if access[0] == '1':
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç Admin!')
        else:
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç User!')
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!')

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data='manage_users')
    btn2 = types.InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", callback_data='view_stats')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    if call.data == 'manage_users':
        bot.answer_callback_query(call.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.")
        # –õ–æ–≥–∏–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    elif call.data == 'view_stats':
        bot.answer_callback_query(call.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        # –õ–æ–≥–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
if __name__ == '__main__':
    create_users_table()  # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
    bot.polling(none_stop=True)
    